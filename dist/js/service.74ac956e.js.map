{"version":3,"sources":["webpack:///./src/use/useStore.ts","webpack:///./src/store/action-types.ts","webpack:///./src/views/Service.vue","webpack:///./src/store/mutation-types.ts","webpack:///./src/views/Service.vue?0570","webpack:///./src/views/Service.vue?23b7"],"names":["useStore","AllActionTypes","class","alt","src","style","counter","doubledCounter","getCounter","resetCounter","value","placeholder","AllMutationTypes","name","props","message","type","String","required","store","getters","counterValue1","doubledCounter1","commit","SET_COUNTER1","dispatch","GET_COUTNER1","render"],"mappings":"yGAAA,kDAEM,SAAUA,IACd,OAAO,S,kCCHT,8DAGO,MAAMC,EAAiB,OAAH,wBAAQ,QAAiB,S,uFCF7CC,MAAM,Q,EACT,eAA+C,OAA1CC,IAAI,WAAWC,IAAA,K,YACfC,MAAA,4C,GACIA,MAAA,wB,GACAA,MAAA,wB,gDAJX,eAgBM,MAhBN,EAgBM,CAfJ,EACA,eAaM,MAbN,EAaM,CAZJ,eAAgE,QAAhE,EAAkC,YAAS,eAAG,EAAAC,SAAO,GACrD,eAEC,QAFD,EACG,mBAAgB,eAAG,EAAAC,gBAAc,GAEpC,eAES,UAFDL,MAAM,MAAO,QAAK,oBAAE,EAAAM,cAAA,KAAY,uBAGxC,eAES,UAFDN,MAAM,MAAO,QAAK,oBAAE,EAAAO,gBAAA,KAAc,mB,eAG1C,eAA+C,S,qCAA/B,EAAAC,MAAK,GAAEC,YAAY,W,mBAAnB,EAAAD,SAChB,eAA8B,SAA3B,eAAY,eAAG,EAAAA,OAAK,O,oDCZtB,MAAME,EAAmB,OAAH,wBAAQ,QAAiB,Q,gBCGvC,iBAAgB,CAC7BC,KAAM,UACNC,MAAO,CACLC,QAAS,CACPC,KAAMC,OACNC,UAAU,IAGd,MAAMJ,GACJ,MAAMK,EAAQ,OAAAnB,EAAA,QACRU,EAAQ,eAAII,EAAMC,SAAW,IAE7BT,EAAU,eAAS,IAAMa,EAAMC,QAAQC,eACvCd,EAAiB,eAAS,IAAMY,EAAMC,QAAQE,iBACpD,SAASb,IACPU,EAAMI,OAAOX,EAAiBY,aAAc,GAG9C,SAAehB,I,4DACPW,EAAMM,SAAS,OAAeC,aAAc,QAGpD,MAAO,CACLhB,QACAJ,UACAC,iBACAE,eACAD,iBC9BN,EAAOmB,OAASA,EAED","file":"js/service.74ac956e.js","sourcesContent":["import { store, Store } from \"./../store\";\n\nexport function useStore() {\n  return store as Store;\n}\n","import { ActionTypes as counterTypes } from \"./counter/action-types\";\nimport { ActionTypes as counter1Types } from \"./counter1/action-types\";\n\nexport const AllActionTypes = { ...counterTypes, ...counter1Types };\n\n// export type ATypes = typeof AllActionTypes;\n","<template>\n  <div class=\"home\">\n    <img alt=\"Vue logo\" src=\"../assets/logo.png\" />\n    <div style=\"display: flex;flex-direction: column\">\n      <label style=\"font-weight: bold;\">counter: {{ counter }}</label>\n      <label style=\"font-weight: bold;\"\n        >doubledCounter: {{ doubledCounter }}</label\n      >\n      <button class=\"btn\" @click=\"getCounter\">\n        Increment Counter\n      </button>\n      <button class=\"btn\" @click=\"resetCounter\">\n        Reset Counter\n      </button>\n      <input v-model=\"value\" placeholder=\"edit me\" />\n      <p>Message is: {{ value }}</p>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from \"vue\";\nimport { useStore } from \"@/use/useStore\";\nimport { AllMutationTypes } from \"@/store/mutation-types\";\nimport { AllActionTypes } from \"@/store/action-types\";\n\nexport default defineComponent({\n  name: \"Service\",\n  props: {\n    message: {\n      type: String,\n      required: false\n    }\n  },\n  setup(props) {\n    const store = useStore();\n    const value = ref(props.message || \"\");\n\n    const counter = computed(() => store.getters.counterValue1);\n    const doubledCounter = computed(() => store.getters.doubledCounter1);\n    function resetCounter() {\n      store.commit(AllMutationTypes.SET_COUNTER1, 0);\n    }\n\n    async function getCounter() {\n      await store.dispatch(AllActionTypes.GET_COUTNER1, 100);\n    }\n\n    return {\n      value,\n      counter,\n      doubledCounter,\n      resetCounter,\n      getCounter\n    };\n  }\n});\n</script>\n","import { MutationTypes as counterTypes } from \"./counter/mutation-types\";\nimport { MutationTypes as counter1Types } from \"./counter1/mutation-types\";\n\nexport const AllMutationTypes = { ...counterTypes, ...counter1Types };\n\n// export type ATypes = typeof AllMutationTypes;\n","\nimport { defineComponent, computed, ref } from \"vue\";\nimport { useStore } from \"@/use/useStore\";\nimport { AllMutationTypes } from \"@/store/mutation-types\";\nimport { AllActionTypes } from \"@/store/action-types\";\n\nexport default defineComponent({\n  name: \"Service\",\n  props: {\n    message: {\n      type: String,\n      required: false\n    }\n  },\n  setup(props) {\n    const store = useStore();\n    const value = ref(props.message || \"\");\n\n    const counter = computed(() => store.getters.counterValue1);\n    const doubledCounter = computed(() => store.getters.doubledCounter1);\n    function resetCounter() {\n      store.commit(AllMutationTypes.SET_COUNTER1, 0);\n    }\n\n    async function getCounter() {\n      await store.dispatch(AllActionTypes.GET_COUTNER1, 100);\n    }\n\n    return {\n      value,\n      counter,\n      doubledCounter,\n      resetCounter,\n      getCounter\n    };\n  }\n});\n","import { render } from \"./Service.vue?vue&type=template&id=010c966f&bindings={}\"\nimport script from \"./Service.vue?vue&type=script&lang=ts\"\nexport * from \"./Service.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}